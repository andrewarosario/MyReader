{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/providers/reddit-service/reddit-service.ts","../../src/pages/home/home.ts","../../src/app/app.component.ts","../../src/app/app.module.ts","../../src/app/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 24;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 24\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 27;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 27\n// module chunks = 0","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class RedditService {\n\n    private feeds: Array<any>;\n\n    constructor(private http: Http) {\n        \n    }\n\n    carregarConteudo(url: string): Promise<any> {\n\n        return new Promise(resolve => {\n            this.http.get(url)\n            .map(res => res.json())\n            .subscribe(data => {\n                this.feeds = data.data.children;\n\n                this.feeds.forEach((e,i,a) => {\n                    if (!e.data.thumbnail || e.data.thumbnail.indexOf('b.thumbs.redditmedia.com') === -1) {\n                        e.data.thumbnail = 'http://www.redditstatic.com/icon.png';\n                    }\n                });\n\n                resolve(this.feeds);\n            }, err => console.log(err));\n\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/reddit-service/reddit-service.ts","import { Component, ViewChild } from '@angular/core';\nimport { NavController, LoadingController, ActionSheetController, Content } from 'ionic-angular';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { InAppBrowser } from '@ionic-native/in-app-browser';\nimport { RedditService } from '../../providers/reddit-service/reddit-service';\nimport { FormControl } from '@angular/forms'\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\n\nexport class HomePage {\n\n    @ViewChild(Content) content: Content;\n\n    public feeds: Array<any>;\n    private url: string = \"https://www.reddit.com/new.json\";\n    private postsAntigos: string = \"https://www.reddit.com/new.json?after=\";\n    private postsNovos: string = \"https://www.reddit.com/new.json?before=\";\n\n    public feedSemFiltro: Array<any>;\n    public possuiFiltro: boolean = false;\n\n    public termoBuscar: string = '';\n    public termoBuscarControle: FormControl;\n\n    constructor(public navCtrl: NavController, public http: Http, public loadingCtrl: LoadingController,\n                public actionSheetCtrl: ActionSheetController, public redditService: RedditService) {\n\n        this.carregarConteudo();\n\n        this.termoBuscarControle = new FormControl();\n\n        this.termoBuscarControle.\n        valueChanges.\n        debounceTime(1000).\n        distinctUntilChanged().\n        subscribe(busca => {\n            if (busca !== '' && busca) {\n                this.buscar();\n            }\n        })\n\n    }\n\n    buscar() {\n        this.possuiFiltro = false;\n        this.feeds = this.feedSemFiltro.filter((item) => {\n            return item.data.title.toLowerCase().indexOf(this.termoBuscar.toLowerCase()) > -1;\n        })\n    }\n\n    carregarConteudo():void {\n\n        let carregando = this.loadingCtrl.create({\n            content: \"Carregando Conteúdo...\"\n        })\n\n        this.redditService.carregarConteudo(this.url)\n        .then(data => {\n\n            this.feeds = data;\n            this.feedSemFiltro = this.feeds\n            carregando.dismiss();\n\n        });        \n    }\n\n    selecionarItem(url: string):void {        \n        let browser = new InAppBrowser();\n        browser.create(url, '_system');\n    }\n\n    doInfinito(scrollInfinito) {\n        let paramsUrl = (this.feeds.length > 0) ? this.feeds[this.feeds.length - 1].data.name : \"\";\n\n        this.http.get(this.postsAntigos + paramsUrl)\n        .map(res => res.json())\n        .subscribe(data => {\n            this.feeds = this.feeds.concat(data.data.children);\n\n            this.feeds.forEach((e,i,a) => {\n                if (!e.data.thumbnail || e.data.thumbnail.indexOf('b.thumbs.redditmedia.com') === -1) {\n                    e.data.thumbnail = 'http://www.redditstatic.com/icon.png';\n                }\n            })\n            \n            this.feedSemFiltro = this.feeds;\n            this.possuiFiltro = false;\n            scrollInfinito.complete();\n        });\n    }\n\n    doRefresh(refresher) {\n        let paramsUrl = this.feeds[0].data.name;\n\n        this.http.get(this.postsNovos + paramsUrl).map(res => res.json())\n        .subscribe(data => {\n        \n            this.feeds = data.data.children.concat(this.feeds);\n            \n            this.feeds.forEach((e, i, a) => {\n                if (!e.data.thumbnail || e.data.thumbnail.indexOf('b.thumbs.redditmedia.com') === -1 ) {  \n                    e.data.thumbnail = 'http://www.redditstatic.com/icon.png';\n                }\n            })\n            \n            this.feedSemFiltro = this.feeds;\n            this.possuiFiltro = false;            \n            refresher.complete();\n        });         \n    }\n\n    mostrarFiltros():void {\n\n        this.content.scrollToTop();\n\n        let actionSheet = this.actionSheetCtrl.create({\n            title: 'Opções de Filtro:',\n            buttons: [\n                {\n                    text: 'Música',\n                    handler: () => {\n                        this.feeds = this.feedSemFiltro.filter((item) => item.data.subreddit.toLowerCase() === \"music\");\n                        this.possuiFiltro = true;\n                    }\n                },\n                {\n                    text: 'Filmes',\n                    handler: () => {\n                        this.feeds = this.feedSemFiltro.filter((item) => item.data.subreddit.toLowerCase() === \"movies\");\n                        this.possuiFiltro = true;\n                    }                    \n                },\n                {\n                    text: 'Games',\n                    handler: () => {\n                        this.feeds = this.feedSemFiltro.filter((item) => item.data.subreddit.toLowerCase() === \"gaming\");\n                        this.possuiFiltro = true;\n                    }                    \n                },\n                {\n                    text: 'Livros',\n                    handler: () => {\n                        this.feeds = this.feedSemFiltro.filter((item) => item.data.subreddit.toLowerCase() === \"books\");\n                        this.possuiFiltro = true;\n                    }                    \n                },                {\n                    text: 'Cancelar',\n                    role: 'cancel',\n                    handler: () => {\n                        this.feeds = this.feedSemFiltro\n                        this.possuiFiltro = false;\n                    }\n                },\n            ]\n        });\n\n        actionSheet.present();\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {    \n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n      statusBar.backgroundColorByHexString('#ffffff');\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { HttpModule } from '@angular/http';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { RedditService } from '../providers/reddit-service/reddit-service';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    RedditService\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts"],"sourceRoot":""}